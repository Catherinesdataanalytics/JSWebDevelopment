//array: same kind of items combined together
public class Main {

    public static void main(String[] args){
        //first way to get array
        int[] array = new int[] {90, 95, 92, 89, 100, 98}
        //second way to get array
        int[] array2 = new int[6];
        array2[0] = 90;
        array2[1] = 95;
        array2[2] = 92;
        array2[3] = 89;
        array2[4] = 100;
        array2[5] = 98;
        //  change
        array2[2] = 8;//this change the num in the array
        System.out.println(array2.length);
        //you can not change the length of the array, if you want, please make a new one
        int[][] matrix = new int[][]{
            {1,4,7,10},
            {2,6,12,15},
            {6,8,13,20}
        //should we change the length of the array
        //{{1,2},{3},{34,5,6,7}} no error will happen
        };
        System.out.println(matrix.length);
        System.out.println(matrix[0].length);
        System.out.println(matrix[0][1]);

        int[][] matrix2 = new int[3][4];
    }


    }

}

//order
//1 -> 2 -> 3
public class Main {

    public static void main(String[] args){
        char operator = '*';
        int a = 10,int b = 20;
        if (operator == '*'){
            System.out.println(a * b);
        } else if (operator == '-'){
            System.out.println(a - b);
        } else if (operator == '/'){
            System.out.println(a / b);
        } else {
            System.out.println(a + b);
        }

    }
}


//find the biggest of all the numbers a=10,b=20,c=15
//find the biggest of those all
// the wrong way: you never should use the if inside if!
 if (a > b ) {
     int a = 10, b = 20, c =15;
     int max = Integer.MIN_VALUE;
     if (a > b){
         if (a > c){
             max = a;
         } else {
             max = c;
         }
     } else {
         if (b > c){
             max = b;
         } else {
             max = c;
         }
     }
 }

//it should be like this:
int a = 10, b = 20, c =15;
int max = a;
if (b > max){
    max = b;
}
if (c > max){
    max = c;
}
System.out.println(max);

//how to find the biggest of n numbers
//for loop
//(initiate, when this will be excecuted, how to loop)
int sum = 0;
for (int i = 0; i < 10; ++i){
    sum += i;
}
System.out.println(sum);
//System.out.prinln(i) this will get error

//in the loop, ++i == i++
//++i, i++ most of times, there is no change
//when there is difference? ++i means add 1 to i and then assign the number to j
int i = 0;
int j = ++i; //now the j = 1 ,i =1: if + is before i, this means that i add 1 before assign
int k = i++; // k = 0, i =1: if + is behind i this means that i assigned to k before added on 1
//this also work
int sum = 0;int i = 0
for (; i < 10; ++i){
    sum += i;
}
System.out.println(sum);
//System.out.prinln(i) this will not get error cause i is outside

//variable inside for loop can only be accessed inside the for loop
int sum = 0;
int m = 10; n = 20;
for (i = m; i <= n; ++i){
    sum += i;
}
System.out.println(sum);
//
int sum = 0;
int m = 10; n = 20;
for (i = n; i >= m; i-=2){
    sum += i;
}
System.out.println(sum);

//while loop
int sum = 10,i =0;
while(i<10){
    sum +=i;
    i++;
}
System.out.println(sum);
//when to use for loop:( initiate, final, adding condition)
//when to use more needed to be added outside and inside
//for loop and while loop can be done transferred

//use for loop to add all the numbers together
int[] array = new int[] {90, 95, 92, 89, 100, 98}

int len = array.length;
for (int i = 0; i < len; ++i){
    sum += array[i];
}
System.out.println(sum)


//find the max value in one array
//please remember to add ';'to the inside of the if function
int[] array = new int[] {90, 95, 92, 89, 100, 98};
int max = 0;
int len = array.length;
for (int i = 0; i < len; ++i){
    if (array[i] > max){
        max = array[i];
    }
}
System.out.println(max);

//find the second max
int[] array = new int[] {90, 95, 92, 89, 100, 98};
int len = array.length;
int max = 0;
int second = 0;

for (int i = 0; i < len; ++i){
    if (array[i] > max){
        second = max
        max = array[i];
    }else if (second < array[i]){
        second = array[i];
    }
}
System.out.println(max);
System.out.println(second);

//
int[][]matrix = new int[][]{
    {10,20,30},
    {10,30},
    {1,2,3,4,5}
};
int n = matrix.length//width
int m = matrix[0].length//length

for (int i =0; i< matrix.length; ++i){
    for (int j = 0; j < matrix[i].length; ++j){
        System.out.println(matrix[i][j]);
    }
}

//how to printout the matrix
System.out.print('[')
for (int i =0; i< matrix.length; ++i){
    System.out.print('[')
    for (int j = 0; j < matrix[i].length; ++j){
        System.out.println(matrix[i][j]);
    }
    System.out.print(']')
}
System.out.print(']')

//break and continue
//find if there is any 100 exist
int[] array = new int[] {90, 95, 100, 92, 70, 56, 89, 98};
boolean found = false;
for (int i = 0; i < array.length; ++i){
    if (array[i] == 100){
        found = true;
        break;// this only print 0 and 1
    }
    System.out.println(i);
}


//continue//skip the code if it satisfied if condition
for (int i = 0; i < score.length; ++i){
    if (score[i] < 60) continue;//this will not output the score less than 60//
    System.out.println(score[i]);
}


























