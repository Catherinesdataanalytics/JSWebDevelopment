package com.company;
//once return the function will be ended
public class Module1 {

    public static void swap0(int a, int b){
        //this will not change these values
        int temp = a;
        a = b ;
        b = temp;
    }

    public static void swap1(int[] array){
        // arrays can be changed
        int temp1 = array[0];
        array[0] = array[2];
        array[2] = temp1;
    }
    //use this to print out
    public static void main(String[] args) {
        int a = 20;
        int b = 40;
        swap0(a,b);
        System.out.println(a+" "+b);
        // this will not change the direction
        //this is unique in java, be careful, array can be referenced while numbers can not

        int[]array = new int[]{1,2,4};
        swap1(array);
        System.out.println(array[0] +" "+array[1]+" "+ array[2]);

    }
}
//return
// void means you do not need to return value in your funcctoion
// return one

class ResultType{
    String para1;
    double parm2;
    int param3;
}

//

class Student{
    private String name;//not safe ,its better to use private//name can not use to get the function
    public int score;
    public Student(String name, int score){
        this.name = name;
        this.score = score;//this means separate the name to be different to recognizee
    }//this is deafault

    public String getName(){//you need use this funciton to get the private attribute
        return name;//this you do not need
    }

    public static void print(){ //static ,you do not need an object and can be used
        //you need to add void because you do not need input
        System.out.println("ling handsome");
    }

    public void setName(String name){
        this.name = name;
    }

}


class Dog {
    public void speak(){
        System.out.println("WOW");
    }
}

//public can be changed outside
//private can only be used to inside
//static can be get without through item
public class Main{
    public static void main(String[] args){

        Student s1 = new Student("cat", 23);
        Student s2 = new Student("jlo", 45);
        Student s3 = new Student("ajfd",99);
        System.out.println(s1.getName());
        System.out.println(s1.score);
        System.out.println(s2.getName());
        System.out.println(s2.score);
        System.out.println(s3.getName());
        //if public, you may change the name.s1.name
        //you need to go through this function to change the name
        s1.setName("il");
        System.out.println("new name is "+s1.getName());
        //student
        Student.print();


        //s3.name;//variables

        Dog dog =  new Dog();
        dog.speak();
        //method
        Dog dog2 = new Dog();
        dog2.speak();//sampe method can be used on these functions

        //constructor functions


        // write your code here
        //make i to iterate
        String a = "hello";
        String b = new String("hello");
        System.out.println(a.length());





        //above is oop part
        for (int i = 0; i < a.length(); i++) {
            System.out.println(a.charAt(i));

        }

        int[] array = new int[]{1, 2, 4};
        for(int num :array)
            System.out.println(num);

        //if you make it array you can iterate more easily, this way you donot need to make i
        //char[] chars = new char[] {'h', 'e','l','l','o'};
        for (char c: a.toCharArray()) {
            System.out.println(c);
        }
        //concate the string

        String name = "lizdffg";
        name = "My name is " + name;
        System.out.println(name);

        int age = 18;
        String introduction ="" ;
        introduction = "I am " + age + " years old";
        System.out.println(introduction);
        //this will make 18 a str automatically

        float f = 1.3f;
        name += f;
        System.out.println(name);
        //
        //search for the string
        String source = "jiuzhang";
        int index = source.indexOf("zhang");
        System.out.println(index);

        //comparing the strings
        String c = "hello";
        String d = new String("hello");
        System.out.println(c == d);
        System.out.println(c != d);
        //they are different objects
        //we should compare their values instead of their objects
        System.out.println(a.equals(b));
        //
        //if they are consistants they should be equal: true
        String e = "hello";
        String E = "hello";
        System.out.println(E == e);
        //integer the value will be different
        int g = 1;
        int h = 45;
        System.out.println(g == h);
        //if you use new version, it will be not equal,every creation will be different

        String s = new String("hello");
        String x = new String("hello");
        System.out.println(s == x);// we not use ==
        System.out.println(s.equals(x));//we use this

        //small test
        int age1 = 18;
        String str = "I am " + age1 + 3 +" years old";
        System.out.println(str);

        //litcode2018


    }

}
//iterate the string











